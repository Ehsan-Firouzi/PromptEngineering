**SecureRandom**
1-1 - Detect all instances of SecureRandom creation and store each instance in R1, R2, ..., Ri. Store the total number of detected instances in N.
1-2 - For each SecureRandom instance:
1-2-1 - Track how the SecureRandom instance is initialized, e.g., using a specific algorithm, seed, or default constructor.
1-2-2 - Determine if the instance is reseeded using possibly hardcoded or predictable values.
1-2-3 - Identify if the SecureRandom instance is used for cryptographic purposes (e.g., generating keys, IVs, nonces).
1-3 - For R1, extract details of initialization, reseeding, and usage context.
1-4 - If initialized with a specific algorithm (e.g., SHA1PRNG), set AI1 to the algorithm name; if not specified, set AI1 to "Default".
1-5 - If the initialization or reseeding value (seed) is hardcoded or constant, set SI1 to "Insecure: Hardcoded/Constant Seed".
1-6 - Else, set SI1 to "Seed OK".
1-7 - If the SecureRandom instance is used for cryptographic purposes, set CU1 to "Cryptographic Use".
1-8 - Else, set CU1 to "Non-Cryptographic Use".
1-9 - If any instance of SecureRandom has "Insecure: Hardcoded/Constant Seed" and "Cryptographic Use", set AT to "Insecure Randomness for Cryptographic Purposes".

Output:

Combine the calculated values into a structured response like provided in triple quotes. Do all steps. Just include the following format in your response (don't include any additional details or explanation):
"""
SecureRandom Usages:
Number of usages=[N],
Usages={(R1: {Initialization Details=[initialization_R1], Algorithm=[AI1], Seed Status=[SI1], Usage Context=[CU1]}, (R2: {Initialization Details=[initialization_R2], Algorithm=[AI2], Seed Status=[SI2], Usage Context=[CU2]}, ... (Ri: {Initialization Details=[initialization_Ri], Algorithm=[AIi], Seed Status=[SIi], Usage Context=[CUi]})},
Overall Status: [AT]
"""
